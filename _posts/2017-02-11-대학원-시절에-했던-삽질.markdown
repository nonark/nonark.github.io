## 이전에 했던 공부(삽질) - 1

### 고정문자열 필터를 이용한 정규표현식

#### 네트워크 탐지 시스템
* 외부에서 들어오는 공격 패킷을 탐지하는 시스템
* 공격 패턴에 맞는 정규표현식 정의
	* 공격 패턴이 다양해지면서 탐지 시스템 내의 정규표현식 패턴이 복잡해짐
	* 정규표현식 매칭을 하는 데 걸리는 시간 증가
		* 네트워크 탐지 시스템의 병목 구간

#### 병목 구간 해결 방법
* 정규표현식 매칭의 병렬처리
	* 멀티스레드를 이용한 병렬처리
	* 스레드의 개수에 의해 속도가 결정

* 필터를 사용하는 방법
	* 정규표현식에서 변하지 않는 부분(고정문자열)을 이용해서 필터 생성
	* 실제 검사해야 하는 패턴만 검사
		* 고정문자열을 검사하는 시간 < PCRE 매칭을 수행하는 시간

#### 고정문자열 필터를 사용한 매칭 방법
* 정규표현식 부분에서 유동적인 부분을 제거한다

![](/image/20170211_img1.JPG)

* 고정 문자열을 길이가 N인 Gram으로 분할한다
	* 한 글자씩 이동하면서 길이가 N인 문자열 생성

![](/image/20170211_img2.JPG)

* Gram을 이용해서 해시 테이블을 구성한다
	* 중복이 적은 Gram부터 사용해서 같은 문자열에 대해 다수의 정규표현식이 검사대상에 들어가는 것을 방지한다.
	* 사용된 Gram이 적을수록 정밀도가 증가한다.
	
![](/image/20170211_img3.JPG)

#### 좀 더 성능을 향상시킬 수 없는지에 대한 고민
* 중복된 고정 문자열이 존재할 경우에는 어떻게 될까?
	* Gram의 중복이 발생
		* 많은 Gram을 사용하면, 패턴마다 중복된 Gram이 많아져서, 탐색시간이 길어지게 되므로 효율감소
		* 대부분의 패턴은 일부가 비슷하기 때문에, Gram을 많이 사용하는 것보다 서로 다른 Gram을 사용하는 것이 효율적

![](/image/20170211_img4.JPG)
![](/image/20170211_img5.JPG)

#### 아이디어 제안
* 휴리스틱(A\* Algorithm)을 사용해서 Gram을 생성하는 shift 거리를 조절
* 적은 수의 Gram으로 긴 문자열을 표현하는 방식

![](/image/20170211_img6.JPG)

* 처음에 생성되는 Gram을 저장

![](/image/20170211_img7.JPG)

* 한번에 이동할 수 있는 거리(1~N)에서 Gram의 정보값을 계산하고 가장 정보값이 큰 Gram을 추가

![](/image/20170211_img8.JPG)

* 만약 기존에 추가한 Gram이 존재한다면 이전의 Gram가 비교하여 제일 큰 정보값으로 갱신

![](/image/20170211_img9.JPG)
![](/image/20170211_img10.JPG)
![](/image/20170211_img11.JPG)

* 가장 정보값이 큰 Gram이 두 개 이상 발생할 경우에는 가장 거리가 먼 Gram을 추가해서 긴 문자열을 커버할 수 있도록 한다.

![](/image/20170211_img12.JPG)

* 임시 테스트
	* Input : abcdefgabcde
	* N-Gram Length : 4
	* 생성되는 Gram의 개수가 9에서 4로 줄어든 것을 확인

![](/image/20170211_img13.JPG)

* 성능 측정
	* CPU : Xeon CPU E5-2630 v2 2.60GHz x 2
	* Ram : 7.85GiB
	* OS : CentOS 6.6(final)

* 소프트웨어
	* Snort Rule
		* PCRE Rule에 Contents(실제 고정문자열 담당)를 추가

* 모든 패턴의 Gram 개수 변화
	* 위 방식을 적용하면 전체 Gram의 개수가 감소

![](/image/20170211_img14.JPG)

* 속도 측정
	* 알고리즘 적용 전/후의 매칭속도 측정

![](/image/20170211_img15.JPG)

* 원인 분석
	* 속도가 기존 방식에 비해 떨어지는 구간이 발생하는 이유
		* 각 Gram이 커버하는 문자열의 길이는 길어졌지만, 1 개의 Gram이 커버하는 패턴의 개수가 증가
		* 탐색 시간이 길어지는 원인으로 작용

![](/image/20170211_img16.JPG)

* 결론
	* 고정문자열 필터를 이용한 정규표현식 매칭방식
		* 실제 검사해야만 하는 정규표현식을 검사
	* 휴리스틱을 사용한 Gram 계산 방법
		* 전체 Gram의 수 감소
		* 정밀도 증가
			* 기존 방식에 비해 같은 Gram 수를 사용했을 때 정확
		* 중복된 Gram에 의한 속도 저하 발생
			* 다수의 Gram을 사용할 경우에는 상대적으로 속도가 증가

